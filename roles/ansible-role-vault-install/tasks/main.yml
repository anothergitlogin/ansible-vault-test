---
#install vault

  - name: Install dependencies
    apt:
      pkg:
      - unzip
      - gnupg-utils
      - build-essential
      - libsqlite3-dev
      - libxml2-dev
      - libldns-dev
      - libbotan-2-dev
      
      
  - name: Create user vault
    user:
      name: "{{ vault_user }}"
      group: "{{ vault_group }}"
      uid: "{{ vault_gid }}"
      shell: /sbin/nologin
      system: yes

  - name: Add Permissions
    shell: |
      sudo chmod +x /usr/local/bin/vault
      sudo chown vault:vault /usr/local/bin/vault
      sudo mkdir -pm 0755 /etc/vault.d
      sudo mkdir -pm 0755 /etc/ssl/vault
      sudo mkdir -pm 0755 /opt/vault/
      sudo chown -R vault:vault /opt/vault/
      sudo chmod -R a+rwx /opt/vault/

  - name: Create content & directory
    file:
      state: directory
      path: "{{ item }}"
      owner: "{{ vault_user }}"
      group: "{{ vault_group }}"
    with_items:
      - "{{ vault_raft_path }}"

  - name: Create conf
    file:
      state: touch
      owner: vault
      group: vault
      path: "{{ vault_conf }}"

  - name: Download Vault
    get_url:
      url: "{{ vault_src }}"
      dest: "{{ vault_download_path }}"
      mode: 0660

  - name: Extract vault.zip
    shell: |
      sudo unzip -o /tmp/vault.zip -d /usr/local/bin/
      sudo chmod 0755 /usr/local/bin/vault
      sudo chown vault:Vault /usr/local/bin/vault


  - name: Clean Up
    file:
      state: absent
      path: "{{ item }}"
    with_items:
      - "{{ vault_download_path }}"

  - name: Create group vault
    group:
      name: "{{ vault_group }}"
      gid: "{{ vault_gid }}"
      state: present

  

#  - name: Install PIP3
#    package:
#      name: python3-pip
#      state: present

# - name: Upgrade PIP
#   pip:
#     name: pip
#     state: latest

# - name: Install python OpenSSL dependencies
#   pip:
#     name: "{{ item }}"
#   loop:
#     - "pyOpenSSL"

# - name: Generate OpenSSL private key pem file
#   openssl_privatekey:
#     path: "{{ vault_privkey }}"

# - name: Generate an OpenSSL CSR
#   openssl_csr:
#     path: "{{ vault_csr }}"
#     privatekey_path: "{{ vault_privkey }}"
#     common_name: "{{ vault_cn }}"
#     country_name: "{{ vault_cc }}"
#     organization_name: "{{ vault_on }}"

#  - name: Generate a Self-Signed OpenSSL certificate
#    openssl_certificate:
#      path: "{{ vault_certfile }}"
#      privatekey_path: "{{ vault_privkey }}"
#      csr_path: "{{ vault_csr }}"
#      provider: selfsigned

#  - name: Adjust certificate files ownerships
#    file:
#      path: "{{ vault_certs }}"
#      owner: "{{ vault_user }}"
#      group: "{{ vault_group }}"
#      state: directory
#      recurse: yes
#      mode: 0664

# - name: Remove python OpenSSL dependencies
#   pip:
#     name: "{{ item }}"
#     state: absent
#   loop:
#     - "pyOpenSSL"

  - name: Create vault server configuration
    template:
      src: vault.hcl.j2
      dest: "{{ vault_conf }}"
      owner: "{{ vault_user }}"
      group: "{{ vault_group }}"
      mode: 0640

  - name: Create vault systemd service config
    template:
      src: vault.service.j2
      dest: "/etc/systemd/system/{{ vault_service }}.service"
      owner: vault
      group: vault
      mode: 0664
      force: no

  - name: Start and enable vault systemd service
    systemd:
      name: "{{ vault_service }}"
      daemon_reload: yes
      state: started
      enabled: yes

  - name: Set VAULT_ADDR listener in profile
    template:
      src: profile.sh.j2
      dest: /etc/profile.d/vault.sh
      owner: root
      group: root
      mode: 0755
